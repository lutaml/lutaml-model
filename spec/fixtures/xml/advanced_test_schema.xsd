<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:test="http://www.example.com/test" targetNamespace="http://www.example.com/test" elementFormDefault="qualified">

  <!-- Advanced Simple Types -->
  <xs:simpleType name="StringOrInteger">
    <xs:union memberTypes="xs:string xs:integer"/>
  </xs:simpleType>

  <xs:simpleType name="ColorList">
    <xs:list itemType="xs:string"/>
  </xs:simpleType>

  <xs:simpleType name="RestrictedString">
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Z][a-z]+"/>
      <xs:minLength value="2"/>
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Base Complex Types -->
  <xs:complexType name="BaseType">
    <xs:sequence>
      <xs:element name="id" type="xs:integer"/>
      <xs:element name="name" type="test:RestrictedString"/>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string" use="optional"/>
  </xs:complexType>

  <!-- Extension using complexContent -->
  <xs:complexType name="ExtendedType">
    <xs:complexContent>
      <xs:extension base="test:BaseType">
        <xs:sequence>
          <xs:element name="description" type="xs:string"/>
          <xs:element name="tags" type="test:ColorList"/>
        </xs:sequence>
        <xs:attribute name="priority" type="xs:integer" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Restriction using complexContent -->
  <xs:complexType name="RestrictedType">
    <xs:complexContent>
      <xs:restriction base="test:BaseType">
        <xs:sequence>
          <xs:element name="id" type="xs:positiveInteger"/>
          <xs:element name="name" type="test:RestrictedString"/>
        </xs:sequence>
        <xs:attribute name="version" type="xs:string" fixed="1.0"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <!-- Mixed Content Type -->
  <xs:complexType name="MixedContentType" mixed="true">
    <xs:sequence>
      <xs:element name="bold" type="xs:string" minOccurs="0"/>
      <xs:element name="italic" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Group Definitions -->
  <xs:group name="CommonElements">
    <xs:sequence>
      <xs:element name="created" type="xs:dateTime"/>
      <xs:element name="modified" type="xs:dateTime"/>
    </xs:sequence>
  </xs:group>

  <!-- Attribute Group -->
  <xs:attributeGroup name="CommonAttributes">
    <xs:attribute name="id" type="xs:ID" use="required"/>
    <xs:attribute name="type" type="xs:string" use="optional"/>
  </xs:attributeGroup>

  <!-- Complex Type with Groups -->
  <xs:complexType name="GroupedType">
    <xs:sequence>
      <xs:group ref="test:CommonElements"/>
      <xs:element name="content" type="xs:string"/>
    </xs:sequence>
    <xs:attributeGroup ref="test:CommonAttributes"/>
  </xs:complexType>

  <!-- Choice Element -->
  <xs:complexType name="ChoiceType">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="text" type="xs:string"/>
      <xs:element name="number" type="xs:integer"/>
      <xs:element name="date" type="xs:date"/>
    </xs:choice>
  </xs:complexType>

  <!-- All Element -->
  <xs:complexType name="AllType">
    <xs:all>
      <xs:element name="first" type="xs:string"/>
      <xs:element name="second" type="xs:integer"/>
      <xs:element name="third" type="xs:boolean"/>
    </xs:all>
  </xs:complexType>

  <!-- Root Elements -->
  <xs:element name="TestDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="base" type="test:BaseType"/>
        <xs:element name="extended" type="test:ExtendedType"/>
        <xs:element name="restricted" type="test:RestrictedType"/>
        <xs:element name="mixed" type="test:MixedContentType"/>
        <xs:element name="grouped" type="test:GroupedType"/>
        <xs:element name="choice" type="test:ChoiceType"/>
        <xs:element name="all" type="test:AllType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- Alternative Root with Substitution Group -->
  <xs:element name="AlternativeDocument" substitutionGroup="test:TestDocument">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="test:TestDocument">
          <xs:sequence>
            <xs:element name="additional" type="xs:string"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

</xs:schema> 